basePath: /
definitions:
  account.BankAccount:
    properties:
      balance:
        description: Баланс
        type: number
      createdAt:
        description: Дата создания
        type: string
      currency:
        description: Валюта
        type: string
      id:
        description: Уникальный идентификатор аккаунта
        type: integer
      name:
        description: Название аккаунта
        type: string
      updatedAt:
        description: Дата обновления
        type: string
      userID:
        description: ID пользователя
        type: integer
    type: object
  handler.bankAccountRequest:
    properties:
      balance:
        description: Баланс
        type: number
      currency:
        description: Валюта
        type: string
      name:
        description: Название
        type: string
    required:
    - balance
    - currency
    - name
    type: object
  request.BankAccountRequest:
    properties:
      balance:
        type: number
      currency:
        type: string
      name:
        type: string
    required:
    - balance
    - currency
    - name
    type: object
  request.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  request.LogoutRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  request.RegisterRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  response.MessageResponse:
    properties:
      message:
        type: string
    type: object
  response.TokensResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API для регистрации, логина и логаута пользователей
  title: MoneyFlow API
  version: "1.0"
paths:
  /accounts:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные аккаунта
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.BankAccountRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/account.BankAccount'
        "400":
          description: ошибка
          schema:
            type: string
        "401":
          description: Неавторизован
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Создать банковский аккаунт
      tags:
      - accounts
  /accounts/{id}:
    delete:
      parameters:
      - description: ID аккаунта
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.MessageResponse'
        "400":
          description: ошибка
          schema:
            type: string
        "401":
          description: Неавторизован
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Удалить банковский аккаунт
      tags:
      - accounts
    put:
      consumes:
      - application/json
      parameters:
      - description: ID аккаунта
        in: path
        name: id
        required: true
        type: integer
      - description: Данные аккаунта
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.bankAccountRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/account.BankAccount'
        "400":
          description: ошибка
          schema:
            type: string
        "401":
          description: Неавторизован
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Обновить банковский аккаунт
      tags:
      - accounts
  /login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные для входа
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.TokensResponse'
        "400":
          description: ошибка
          schema:
            type: string
      summary: Логин
      tags:
      - auth
  /logout:
    post:
      consumes:
      - application/json
      parameters:
      - description: Refresh токен для логаута
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.LogoutRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.MessageResponse'
        "400":
          description: ошибка
          schema:
            type: string
      summary: Логаут
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные для регистрации
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.MessageResponse'
        "400":
          description: ошибка
          schema:
            type: string
      summary: Регистрация
      tags:
      - auth
schemes:
- http
swagger: "2.0"
